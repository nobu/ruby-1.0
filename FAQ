.\" FAQ -  -*- Indented-Text -*- created at: Tue Jan  4 12:48:12 JST 1994
これはRubyに関するFAQ(Frequently Asked Question)をまとめたものです.
Emacsでこのファイルを見ている場合にはM-2 C-x $で質問の部分だけを読むこ
とができます. C-x $で全てを読む状態に戻せます.
------------------------------
1) Rubyの名称の由来は
    
    Rubyは何かの略称ではなく, 赤い宝石の名前をとって名付けられました. 
    perl(pearlは6月の誕生石)の次を目指す(Rubyは7月の誕生石)という意味
    があります. 更に美しく価値あるものであって欲しいという願いも含まれ
    ています.
------------------------------
2) Rubyが影響を受けた言語は?
   
    Rubyの言語仕様はC, Perl, Eiffelの各言語にこの順に影響を受けていま
    す. その他に影響を受けた言語としてはtcl, AWK, bourne shell, CLU,
    Icon, Sather, Smalltalk, Emacs Lispなどがあります.
------------------------------
3) Rubyの特徴は?
    
    以下に箇条書にします.
    
      + インタプリタであり, 手軽にプログラムできる.
      + 変数宣言が要らない.
      + ファイルやストリームなどへのUNIX的な操作が簡単にできる.
      + バイナリファイルも扱える.
      + きちんとしたオブジェクト指向言語である.
      + 特異メソッドの機能が提供されている.
      + モジュールによる機能の共有ができる.
      + 例外処理機能がある.
      + GCがあるのでメモリ管理を気にしなくて済む.
      + 一貫性のある言語仕様.
      + 複雑なデータ構造も扱える.
      + ダイナミックロードをサポートする(システムによる).
    
    逆に欠点は
    
      - 発展途上で機能が少ない.
      - デバッガが(まだ)ない.
      - 遅い.
      
    ことでしょうか.
------------------------------
4) Rubyに変数宣言がないことのメリットは?
    
    ある変数がどのスコープに属するかが一目で分かるので, プログラムの読み
    易さ, 理解し易さが増すことが最大のメリットです. またトータルのタイプ
    量が減るので書き易さ, 手軽さにも貢献します.
------------------------------
5) RubyとPerlの違いは?
    
    RubyとPerlはテキスト操作に優れたスクリプト言語であるという点で, カ
    バーする範囲が近く, 一見するとライバルに見えます. 確かにRubyの設計
    において「Perlにできることはできるように」ということは, 一つの重要
    な目標でした. しかし, Rubyの真の目的はあくまでも「手軽なオブジェク
    ト指向言語」であり, また, Ruby設計の3大目標である, 機能性・一貫性・
    拡張性の結果として, RubyはPerlとは異なる言語になりました.
    
    RubyはPerlほど「何でもあり」ではありませんし, ほとんどの場合Perlよ
    り処理速度が遅いです. しかし, Rubyのオブジェクト指向機能はPerlでは
    満足できない人たちにアピールすると思います.
------------------------------
Local variables:
fill-column: 70
end:
